// Copyright (c) 2019 bketelsen
//
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT

package dlx

import (
	"os"

	"github.com/bketelsen/dlx/state"
	"github.com/spf13/cobra"
)

type CmdStop struct {
	Cmd    *cobra.Command
	Global *state.Global
}

func (c *CmdStop) Command() *cobra.Command {
	// stopCmd represents the stop command
	var stopCmd = &cobra.Command{
		Use:   "stop",
		Short: "stop a running container",
		Long:  `Stop a running container.`,
		Args:  cobra.MinimumNArgs(1),
		RunE:  c.Run,
	}
	return stopCmd
}
func (c *CmdStop) Run(cmd *cobra.Command, args []string) error {
	conf := c.Global.Conf

	// Quick checks.
	exit, err := c.Global.CheckArgs(cmd, args, 1, -1)
	if exit {
		return err
	}

	// Connect to the daemon
	remote, name, err := conf.ParseRemote(args[0])
	if err != nil {
		return err
	}

	d, err := conf.GetInstanceServer(remote)
	if err != nil {
		return err
	}

	name = args[0]

	log.Running("Stopping container " + name)

	err = lxclient.ContainerStop(name)
	if err != nil {
		log.Error("Error stopping container: " + err.Error())
		os.Exit(1)
	}

	log.Success("Container " + name + " stopped.")
	return nil
}
